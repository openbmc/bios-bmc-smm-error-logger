{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b4f105c4_5ae33e95",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-05-16T00:15:57Z",
      "side": 1,
      "message": "Unit test WIP",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 17
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d372983_49b45351",
        "filename": "include/pci_handler.hpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-16T00:41:03Z",
      "side": 1,
      "message": "getting kind of tired of the `std::`. Can we just remove it? for all primitive types?",
      "range": {
        "startLine": 36,
        "startChar": 49,
        "endLine": 36,
        "endChar": 62
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf9ad100_71ed57fb",
        "filename": "include/pci_handler.hpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-05-16T02:59:55Z",
      "side": 1,
      "message": "Yeah that\u0027s fair enough - I picked it up from somewhere and just kept it consistent. I\u0027ll drop it across the board for readability.",
      "parentUuid": "4d372983_49b45351",
      "range": {
        "startLine": 36,
        "startChar": 49,
        "endLine": 36,
        "endChar": 62
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76f221b3_156077e9",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-16T00:41:03Z",
      "side": 1,
      "message": "This should also be wrapped with https://github.com/openbmc/stdplus/blob/master/src/stdplus/handle/managed.hpp. Probably should be handle in `sys`.",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2d8143_e8892d42",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-05-16T02:59:55Z",
      "side": 1,
      "message": "I mentioned it in the other review (for sys) but I think it\u0027s better to \"managed\" it at this level and keep sys at just the interface override level.",
      "parentUuid": "76f221b3_156077e9",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dc16dc7_a6988a6e",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-05-17T14:46:48Z",
      "side": 1,
      "message": "It actually doesn\u0027t provide us too much now that I think about it since we cover all the branches.. but this is future proofing since we could add more logic and forget to close for instance.",
      "parentUuid": "4d2d8143_e8892d42",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14ad29a3_188ab1c0",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-16T00:41:03Z",
      "side": 1,
      "message": "this will fail if `offset + length` overflows.\n\nMight need to check offset and length separately first\n- offset \u003c max(uint16)\n- length \u003c max(uint16)\n- offset + length \u003c max(uint16)\n\nWith that being said, this will be an issue in the second case when.\n\n```\nlength \u003e max(uint16)\n```\nwill underflow and mess with things.\n\nNot sure how we want to handle the cases, but there are a number of failure cases as is.",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 63
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2594924c_d48d0149",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-05-16T02:59:55Z",
      "side": 1,
      "message": "Yeah, sorry I probably should have marked this as WIP as the unit tests are not ready and I definitely didn\u0027t cover all the corner cases. Let me mark it as WIP, fix it up a little bit (and add unit tests) and I\u0027ll let you know when it\u0027s ready.",
      "parentUuid": "14ad29a3_188ab1c0",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 63
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5677c5a_0e35127f",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-16T00:41:03Z",
      "side": 1,
      "message": "same issue here addressed in the comment above.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cb7a23d_9f9ae2a8",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-05-16T02:59:55Z",
      "side": 1,
      "message": "Same as above - will make this WIP and update once it\u0027s ready for review.",
      "parentUuid": "b5677c5a_0e35127f",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "fb48a49d83b76c77cb6a81940c709c4548e39925",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}