{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "99965737_8c3af686",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-01T19:29:36Z",
      "side": 1,
      "message": "It looks like Kasun\u0027s latest update to his change led to this being updated. Reverting to patchset 16 and addressing Willy\u0027s comments.",
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "197979e9_8c1308ed",
        "filename": "meson.build",
        "patchSetId": 17
      },
      "lineNbr": 16,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-01T18:51:53Z",
      "side": 1,
      "message": "should have if not get_option(\u0027tests\u0027).disabled() around this instead.",
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20905022_c5081d60",
        "filename": "meson.build",
        "patchSetId": 17
      },
      "lineNbr": 16,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-01T19:29:36Z",
      "side": 1,
      "message": "yeah makes sense, I\u0027ll move some of that test check from the test/meson.build to here",
      "parentUuid": "197979e9_8c1308ed",
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d242ba73_e3ce30cf",
        "filename": "src/meson.build",
        "patchSetId": 17
      },
      "lineNbr": 5,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-01T18:51:53Z",
      "side": 1,
      "message": "Need the subproject wrapper.",
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0451f3ee_f1f11f55",
        "filename": "src/meson.build",
        "patchSetId": 17
      },
      "lineNbr": 5,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-01T19:47:07Z",
      "side": 1,
      "message": "Oh, I think stdplus doesn\u0027t need it - but it seems it\u0027s good to add the subprojects wrap file for it, so I\u0027ll fix that https://github.com/openbmc/google-misc/blob/master/subprojects/ncsid/src/meson.build#L33",
      "parentUuid": "d242ba73_e3ce30cf",
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf514158_e900495e",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-01T18:51:53Z",
      "side": 1,
      "message": "I think this can be just\n\n```\nreturn std::vector\u003cuint8_t\u003e(mmap.get().data() + offset, finalLength);\n```\n\nMaybe not if you needed to memcpy it.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0697439_dc8bbfe9",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-01T19:47:07Z",
      "side": 1,
      "message": "The memcpy allows us to bypass some std::byte to uint8_t conversion (Which just trying to create a uint8_t vector with {} is refusing to do with:\n\n```\n../src/pci_handler.cpp:43:72: error: no matching function for call to ‘std::vector\u003cunsigned char\u003e::vector(std::span\u003cstd::byte\u003e::pointer, size_t\u0026)’\n   43 |     return std::vector\u003cuint8_t\u003e(mmap.get().data() + offset, finalLength);\n      |                                                                        ^\nIn file included from /usr/include/c++/11/vector:67,\n```\n\nI can get around this by doing an reinterpret_cast separately, something like:\n```\n    uint8_t* mmapIt \u003d reinterpret_cast\u003cuint8_t*\u003e(mmap.get().data() + offset);\n    return std::vector\u003cuint8_t\u003e(mmapIt, mmapIt + finalLength);\n```\n\nhowever, this is giving me a funky error:\n\n```\nclang-tidy-13 --use-color -export-fixes /tmp/tmpi6f5go2_/tmpdpoqu74e.yaml -p\u003d. .../bios-bmc-smm-error-logger/src/pci_handler.cpp\n../src/pci_handler.cpp:44:13: error: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list,-warnings-as-errors]\n    return std::vector\u003cuint8_t\u003e(mmapIt, mmapIt + finalLength);\n            ^\n```\n\nI\u0027ll keep the memcpy if that\u0027s alright with you",
      "parentUuid": "cf514158_e900495e",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72ba2436_3aa9cd37",
        "filename": "src/pci_handler.cpp",
        "patchSetId": 17
      },
      "lineNbr": 40,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-01T20:16:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c0697439_dc8bbfe9",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "6c617d144efc60123ab2869408b9f258a245934c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}