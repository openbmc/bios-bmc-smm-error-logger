{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ebc96db4_69bfe303",
        "filename": "src/buffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-08T07:32:03Z",
      "side": 1,
      "message": "rm std::",
      "range": {
        "startLine": 58,
        "startChar": 16,
        "endLine": 58,
        "endChar": 21
      },
      "revId": "78010a64e4973a99f4e3f76390c02eef4c2ccd5f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec4d722e_5a6da656",
        "filename": "src/buffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-08T07:32:03Z",
      "side": 1,
      "message": "add the expected read size",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 63,
        "endChar": 80
      },
      "revId": "78010a64e4973a99f4e3f76390c02eef4c2ccd5f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade4d5f0_68d8a092",
        "filename": "src/buffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-06-08T07:32:03Z",
      "side": 1,
      "message": "maybe\n```\nstruct CircularBufferHeader *bufferHeader \u003d reinterpret_cast\u003cCircularBufferHeader *\u003e(bytesRead.data());\n\ncachedBufferHeader \u003d *bufferHeader;\n```\nwill work.\n\nI think this avoid one copy.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 61
      },
      "revId": "78010a64e4973a99f4e3f76390c02eef4c2ccd5f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}