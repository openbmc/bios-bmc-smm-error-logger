{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eb6664ef_c04aeb05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-07T03:46:38Z",
      "side": 1,
      "message": "Weird meta-question.  Why does any of this stuff need to be configurable or read from a config file?\n\nPlease answer in your commit message.",
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94034b05_f2987105",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-07T04:21:37Z",
      "side": 1,
      "message": "Hm. We definitely need some of these to be a configurable option per platform / BMC hardware, etc. so I guess the question is why I decided to do this in json config file rather than a build config?\n\nMy reasoning was that it\u0027s easier to see the different configs across different platforms in json rather than looking through the different bbappend files and whatnot but I\u0027m down to change this to something else - let me know what you think",
      "parentUuid": "eb6664ef_c04aeb05",
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02c5d64b_7f6d12d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-07T16:21:38Z",
      "side": 1,
      "message": "Certainly not all of them need configurable per platform.  Magic number for example, I would expect to never change on any platform using this.\n\nParsing config files for things that we know at compile time (as a pattern, not just this) is why openbmc userspace is slow to boot.  I would much prefer that we add these parameters one at a time, in the places they\u0027re needed.\n\nYeah, I get bbappends and configure options are a downer, but a big part of the reason they\u0027re meh is that they impose some level of compile-time safety over just fixed config files.",
      "parentUuid": "94034b05_f2987105",
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c246e27_112fa23a",
        "filename": "src/config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-07T03:46:38Z",
      "side": 1,
      "message": "Nit, this is redundant.  ifStream will fail to open if the file doesn\u0027t exist.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62851d63_a614f39c",
        "filename": "src/config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-07T04:25:53Z",
      "side": 1,
      "message": "Thanks, let me take this out.",
      "parentUuid": "1c246e27_112fa23a",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8057c995_bcedf0e8",
        "filename": "src/config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-07T03:46:38Z",
      "side": 1,
      "message": "string_views are not null terminated.  This usage assumes they are.",
      "range": {
        "startLine": 25,
        "startChar": 39,
        "endLine": 25,
        "endChar": 46
      },
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d83a9bb_7692c6be",
        "filename": "src/config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-07T04:25:53Z",
      "side": 1,
      "message": "Good catch. The \"easiest\" solution would be to do a .to_string().c_str() here (perhaps after a null termination check? perhaps not worth it since the configPath should be fairly short), let me know what you think / if you have alternate solutions.",
      "parentUuid": "8057c995_bcedf0e8",
      "range": {
        "startLine": 25,
        "startChar": 39,
        "endLine": 25,
        "endChar": 46
      },
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c064fe42_09bb8722",
        "filename": "src/config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-07T04:32:35Z",
      "side": 1,
      "message": "Oops, forgot that string_view doesn\u0027t have .to_string() conversion and requires an explicitly new string (which is even more ugly)",
      "parentUuid": "3d83a9bb_7692c6be",
      "range": {
        "startLine": 25,
        "startChar": 39,
        "endLine": 25,
        "endChar": 46
      },
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5da4b1d0_7871d417",
        "filename": "src/config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-07T16:21:38Z",
      "side": 1,
      "message": "Generally i\u0027ll just revert to passing by const std::string\u0026, which is a worse API, but prevents copying the string just to gaurantee null termination.",
      "parentUuid": "c064fe42_09bb8722",
      "range": {
        "startLine": 25,
        "startChar": 39,
        "endLine": 25,
        "endChar": 46
      },
      "revId": "33f011baa56ec16af19cfeea916c8f641ce88fb3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}